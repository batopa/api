{
	"variables": [],
	"info": {
		"name": "BE4",
		"_postman_id": "191b6ace-dac7-7553-4a68-081460133599",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"description": "Authorization",
			"item": [
				{
					"name": "Auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{be4Url}}/auth",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"description": ""
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "{{username}}",
									"type": "text",
									"enabled": true
								},
								{
									"key": "password",
									"value": "{{password}}",
									"type": "text",
									"enabled": true
								}
							]
						},
						"description": "Perform authentication"
					},
					"response": []
				}
			]
		},
		{
			"name": "Home",
			"description": "",
			"item": [
				{
					"name": "GET home",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"links\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"self\": {\"type\": \"string\", \"format\": \"uri\"},",
									"                \"home\": {\"type\": \"string\", \"format\": \"uri\"},",
									"            },",
									"            \"required\": [\"self\", \"home\"]",
									"        },",
									"        \"meta\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"resources\": {",
									"                    \"type\": \"object\"",
									"                }",
									"            },",
									"            \"required\": [\"resources\"]",
									"        }",
									"    },",
									"    \"required\": [\"links\",\"meta\"]",
									"};",
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    tests[\"Valid data\"] = tv4.validate(responseJSON, schema);",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{be4Url}}/home/",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"description": ""
							}
						],
						"body": {},
						"description": "Home endpoint"
					},
					"response": []
				}
			]
		},
		{
			"name": "ObjectTypes",
			"description": "",
			"item": [
				{
					"name": "GET single object_type",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"data\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"id\": {\"type\": \"string\"},",
									"                \"type\": {\"type\": \"string\"},",
									"                \"attributes\": {\"type\": \"object\"},",
									"            },",
									"            \"required\": [\"id\", \"type\", \"attributes\"],",
									"        },",
									"        \"links\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"self\": {\"type\": \"string\", \"format\": \"uri\"},",
									"                \"home\": {\"type\": \"string\", \"format\": \"uri\"},",
									"            },",
									"            \"required\": [\"self\", \"home\"],",
									"        },",
									"    },",
									"    \"required\": [\"data\",\"links\"],",
									"};",
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    if (responseCode.code === 200) {",
									"        tests[\"Status equals 200\"] = true;",
									"        tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"        tests[\"Valid data\"] = tv4.validate(responseJSON, schema);",
									"    } else if (responseCode.code === 404) {",
									"        tests[\"Status code is 404\"] = true;",
									"        tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    }",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{be4Url}}/object_types/{{objectTypeId}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"description": ""
							}
						],
						"body": {},
						"description": "GET object_type by object_type_id"
					},
					"response": []
				},
				{
					"name": "GET object_types",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"data\": {",
									"            \"type\": \"array\",",
									"            \"properties\": {",
									"                \"id\": {\"type\": \"string\"},",
									"                \"type\": {\"type\": \"string\"},",
									"                \"attributes\": {\"type\": \"object\"},",
									"            },",
									"            \"required\": [\"id\", \"type\", \"attributes\"]",
									"        },",
									"        \"links\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"self\": {\"type\": \"string\", \"format\": \"uri\"},",
									"                \"home\": {\"type\": \"string\", \"format\": \"uri\"},",
									"            },",
									"            \"required\": [\"self\", \"home\"]",
									"        },",
									"        \"meta\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"pagination\": {",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                        \"count\": {\"type\": \"number\"},",
									"                        \"page\": {\"type\": \"number\"},",
									"                        \"page_count\": {\"type\": \"number\"},",
									"                        \"page_items\": {\"type\": \"number\"},",
									"                        \"page_size\": {\"type\": \"number\"}",
									"                    },",
									"                    \"required\": [\"count\",\"page\",\"page_count\",\"page_items\",\"page_size\"]",
									"                }",
									"            },",
									"            \"required\": [\"pagination\"]",
									"        }",
									"    },",
									"    \"required\": [\"data\",\"links\",\"meta\"]",
									"};",
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody);",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    tests[\"Valid data\"] = tv4.validate(responseJSON, schema);",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{be4Url}}/object_types",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"description": ""
							}
						],
						"body": {},
						"description": "GET object_types"
					},
					"response": []
				},
				{
					"name": "Create object_type",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests[\"Status code is 201\"] = responseCode.code === 201;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{be4Url}}/object_types",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"object_types\",\n        \"attributes\": {\n            \"name\" : \"dummyObjectType\",\n            \"pluralized\" : \"dummyObjectType\",\n            \"description\" : \"this is a dummy object type\",\n            \"plugin\" : \"plugin sample dummy\",\n            \"model\" : \"model sample dummy\"\n        }\n    }\n}"
						},
						"description": "POST ADD object_types"
					},
					"response": []
				},
				{
					"name": "Modify object_type",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var schema = {",
									"    \"type\": \"object_type\",",
									"    \"properties\": {",
									"        \"links\": {",
									"            \"type\": \"object_type\",",
									"            \"properties\": {",
									"                \"self\": {\"type\": \"string\", \"format\": \"uri\"},",
									"                \"home\": {\"type\": \"string\", \"format\": \"uri\"},",
									"            },",
									"            \"required\": [\"self\", \"home\"]",
									"        },",
									"        \"data\": {",
									"            \"type\": \"object_type\",",
									"            \"properties\": {",
									"                \"id\": {\"type\": \"string\"},",
									"                \"type\": {\"type\": \"string\"},",
									"                \"attributes\": {\"type\": \"object_type\"},",
									"            },",
									"            \"required\": [\"id\", \"type\", \"attributes\"],",
									"        },",
									"    },",
									"    \"required\": [\"links\", \"data\"],",
									"};",
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    tests[\"Valid data\"] = tv4.validate(responseJSON, schema);",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{be4Url}}/object_types/{{object_type_id}}",
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"description": ""
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"id\": \"{{objectTypeId}}\",\n        \"type\": \"object_types\",\n        \"attributes\": {\n            \"description\": \"dummy description\"\n        }\n    }\n}"
						},
						"description": "PATCH object_type"
					},
					"response": []
				},
				{
					"name": "Delete object_type",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests[\"Status code is 204\"] = responseCode.code === 204;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    tests[\"Body matches string\"] = responseBody === \"\";",
									"    postman.clearEnvironmentVariable(\"objectTypeId\");",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{be4Url}}/object_types/{{objectTypeId}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"description": ""
							}
						],
						"body": {},
						"description": "DEL object_type"
					},
					"response": []
				}
			]
		},
		{
			"name": "Objects",
			"description": "objects endpoint: Object management",
			"item": [
				{
					"name": "GET single object",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"data\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"id\": {\"type\": \"string\"},",
									"                \"type\": {\"type\": \"string\"},",
									"                \"attributes\": {\"type\": \"object\"},",
									"            },",
									"            \"required\": [\"id\", \"type\", \"attributes\"],",
									"        },",
									"        \"links\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"self\": {\"type\": \"string\", \"format\": \"uri\"},",
									"                \"home\": {\"type\": \"string\", \"format\": \"uri\"},",
									"            },",
									"            \"required\": [\"self\", \"home\"],",
									"        },",
									"    },",
									"    \"required\": [\"data\",\"links\"],",
									"};",
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    if (responseCode.code === 200) {",
									"        tests[\"Status equals 200\"] = true;",
									"        tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"        tests[\"Valid data\"] = tv4.validate(responseJSON, schema);",
									"    } else if (responseCode.code === 404) {",
									"        tests[\"Status code is 404\"] = true;",
									"        tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    }",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{be4Url}}/objects/{{objectId}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"description": ""
							}
						],
						"body": {},
						"description": "get single object by id"
					},
					"response": []
				},
				{
					"name": "GET objects",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"data\": {",
									"            \"type\": \"array\",",
									"            \"properties\": {",
									"                \"id\": {\"type\": \"string\"},",
									"                \"type\": {\"type\": \"string\"},",
									"                \"attributes\": {\"type\": \"object\"},",
									"            },",
									"            \"required\": [\"id\", \"type\", \"attributes\"]",
									"        },",
									"        \"links\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"self\": {\"type\": \"string\", \"format\": \"uri\"},",
									"                \"home\": {\"type\": \"string\", \"format\": \"uri\"},",
									"            },",
									"            \"required\": [\"self\", \"home\"]",
									"        },",
									"        \"meta\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"pagination\": {",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                        \"count\": {\"type\": \"number\"},",
									"                        \"page\": {\"type\": \"number\"},",
									"                        \"page_count\": {\"type\": \"number\"},",
									"                        \"page_items\": {\"type\": \"number\"},",
									"                        \"page_size\": {\"type\": \"number\"}",
									"                    },",
									"                    \"required\": [\"count\",\"page\",\"page_count\",\"page_items\",\"page_size\"]",
									"                }",
									"            },",
									"            \"required\": [\"pagination\"]",
									"        }",
									"    },",
									"    \"required\": [\"data\",\"links\",\"meta\"]",
									"};",
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    tests[\"Valid data\"] = tv4.validate(responseJSON, schema);",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{be4Url}}/objects/",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"description": ""
							}
						],
						"body": {},
						"description": "Get objects list"
					},
					"response": []
				},
				{
					"name": "Create object",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests[\"Status code is 201\"] = responseCode.code === 201;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{be4Url}}/objects",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"objects\",\n        \"attributes\": {\n            \"name\": \"dummy object\"\n        }\n    }\n}"
						},
						"description": "Create new Object"
					},
					"response": []
				},
				{
					"name": "Modify object",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"links\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"self\": {\"type\": \"string\", \"format\": \"uri\"},",
									"                \"home\": {\"type\": \"string\", \"format\": \"uri\"},",
									"            },",
									"            \"required\": [\"self\", \"home\"]",
									"        },",
									"        \"data\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"id\": {\"type\": \"string\"},",
									"                \"type\": {\"type\": \"string\"},",
									"                \"attributes\": {\"type\": \"object\"},",
									"            },",
									"            \"required\": [\"id\", \"type\", \"attributes\"],",
									"        },",
									"    },",
									"    \"required\": [\"links\", \"data\"],",
									"};",
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    tests[\"Valid data\"] = tv4.validate(responseJSON, schema);",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}",
									""
								]
							}
						}
					],
					"request": {
						"url": "{{be4Url}}/objects/{{objectId}}",
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"description": ""
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"id\": \"{{objectId}}\",\n        \"type\": \"objects\",\n        \"attributes\": {\n            \"description\": \"dummy description\"\n        }\n    }\n}"
						},
						"description": "PATCH object"
					},
					"response": []
				},
				{
					"name": "Delete object",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests[\"Status code is 204\"] = responseCode.code === 204;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    tests[\"Body matches string\"] = responseBody === \"\";",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{be4Url}}/objects/{{objectId}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"description": ""
							}
						],
						"body": {},
						"description": "DEL object"
					},
					"response": []
				}
			]
		},
		{
			"name": "Roles",
			"description": "Roles management",
			"item": [
				{
					"name": "GET single role",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"data\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"id\": {\"type\": \"string\"},",
									"                \"type\": {\"type\": \"string\"},",
									"                \"attributes\": {\"type\": \"object\"},",
									"            },",
									"            \"required\": [\"id\", \"type\", \"attributes\"],",
									"        },",
									"        \"links\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"self\": {\"type\": \"string\", \"format\": \"uri\"},",
									"                \"home\": {\"type\": \"string\", \"format\": \"uri\"},",
									"            },",
									"            \"required\": [\"self\", \"home\"],",
									"        },",
									"    },",
									"    \"required\": [\"data\",\"links\"],",
									"};",
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    if (responseCode.code === 200) {",
									"        tests[\"Status equals 200\"] = true;",
									"        tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"        tests[\"Valid data\"] = tv4.validate(responseJSON, schema);",
									"    } else if (responseCode.code === 404) {",
									"        tests[\"Status code is 404\"] = true;",
									"        tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    }",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{be4Url}}/roles/{{roleId}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"description": ""
							}
						],
						"body": {},
						"description": "get single role by id"
					},
					"response": []
				},
				{
					"name": "GET roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"data\": {",
									"            \"type\": \"array\",",
									"            \"properties\": {",
									"                \"id\": {\"type\": \"string\"},",
									"                \"type\": {\"type\": \"string\"},",
									"                \"attributes\": {\"type\": \"object\"},",
									"            },",
									"            \"required\": [\"id\", \"type\", \"attributes\"]",
									"        },",
									"        \"links\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"self\": {\"type\": \"string\", \"format\": \"uri\"},",
									"                \"home\": {\"type\": \"string\", \"format\": \"uri\"},",
									"            },",
									"            \"required\": [\"self\", \"home\"]",
									"        },",
									"        \"meta\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"pagination\": {",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                        \"count\": {\"type\": \"number\"},",
									"                        \"page\": {\"type\": \"number\"},",
									"                        \"page_count\": {\"type\": \"number\"},",
									"                        \"page_items\": {\"type\": \"number\"},",
									"                        \"page_size\": {\"type\": \"number\"}",
									"                    },",
									"                    \"required\": [\"count\",\"page\",\"page_count\",\"page_items\",\"page_size\"]",
									"                }",
									"            },",
									"            \"required\": [\"pagination\"]",
									"        }",
									"    },",
									"    \"required\": [\"data\",\"links\",\"meta\"]",
									"};",
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody);",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    tests[\"Valid data\"] = tv4.validate(responseJSON, schema);",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{be4Url}}/roles/",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"description": ""
							}
						],
						"body": {},
						"description": "Get roles list"
					},
					"response": []
				},
				{
					"name": "GET role users",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"data\": {",
									"            \"type\": \"array\",",
									"            \"properties\": {",
									"                \"id\": {\"type\": \"string\"},",
									"                \"type\": {\"type\": \"string\"},",
									"                \"attributes\": {\"type\": \"object\"},",
									"            },",
									"            \"required\": [\"id\", \"type\", \"attributes\"]",
									"        },",
									"        \"links\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"self\": {\"type\": \"string\", \"format\": \"uri\"},",
									"                \"home\": {\"type\": \"string\", \"format\": \"uri\"},",
									"            },",
									"            \"required\": [\"self\", \"home\"]",
									"        },",
									"        \"meta\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"pagination\": {",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                        \"count\": {\"type\": \"number\"},",
									"                        \"page\": {\"type\": \"number\"},",
									"                        \"page_count\": {\"type\": \"number\"},",
									"                        \"page_items\": {\"type\": \"number\"},",
									"                        \"page_size\": {\"type\": \"number\"}",
									"                    },",
									"                    \"required\": [\"count\",\"page\",\"page_count\",\"page_items\",\"page_size\"]",
									"                }",
									"            },",
									"            \"required\": [\"pagination\"]",
									"        }",
									"    },",
									"    \"required\": [\"data\",\"links\",\"meta\"]",
									"};",
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    tests[\"Valid data\"] = tv4.validate(responseJSON, schema);",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{be4Url}}/roles/{{roleId}}/users",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"description": ""
							}
						],
						"body": {},
						"description": "Get role users"
					},
					"response": []
				},
				{
					"name": "Create role",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests[\"Status code is 201\"] = responseCode.code === 201;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{be4Url}}/roles",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"roles\",\n        \"attributes\": {\n            \"name\": \"dummy role\"\n        }\n    }\n}"
						},
						"description": "Create new Role"
					},
					"response": []
				},
				{
					"name": "Modify role",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var schema = {",
									"    \"type\": \"object_type\",",
									"    \"properties\": {",
									"        \"links\": {",
									"            \"type\": \"object_type\",",
									"            \"properties\": {",
									"                \"self\": {\"type\": \"string\", \"format\": \"uri\"},",
									"                \"home\": {\"type\": \"string\", \"format\": \"uri\"},",
									"            },",
									"            \"required\": [\"self\", \"home\"]",
									"        },",
									"        \"data\": {",
									"            \"type\": \"object_type\",",
									"            \"properties\": {",
									"                \"id\": {\"type\": \"string\"},",
									"                \"type\": {\"type\": \"string\"},",
									"                \"attributes\": {\"type\": \"object_type\"},",
									"            },",
									"            \"required\": [\"id\", \"type\", \"attributes\"],",
									"        },",
									"    },",
									"    \"required\": [\"links\", \"data\"],",
									"};",
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    tests[\"Valid data\"] = tv4.validate(responseJSON, schema);",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{be4Url}}/roles/1",
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"description": ""
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"id\": \"{{roleId}}\",\n        \"type\": \"roles\",\n        \"attributes\": {\n            \"name\": \"Dummy Role\"\n        }\n    }\n}"
						},
						"description": "PATCH role"
					},
					"response": []
				},
				{
					"name": "Delete role",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests[\"Status code is 204\"] = responseCode.code === 204;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    tests[\"Body matches string\"] = responseBody === \"\";",
									"    postman.clearEnvironmentVariable(\"roleId\");",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{be4Url}}/roles/{{roleId}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"description": ""
							}
						],
						"body": {},
						"description": "DEL role"
					},
					"response": []
				},
				{
					"name": "Add role to user",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{be4Url}}/roles/{{roleId}}/relationships/users",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"users\",\n\t    \"id\": \"{{userId}}\"\n    }\n}"
						},
						"description": "Add a role to a user"
					},
					"response": []
				}
			]
		},
		{
			"name": "Status",
			"description": "Status",
			"item": [
				{
					"name": "GET status",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"links\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"self\": {\"type\": \"string\", \"format\": \"uri\"},",
									"                \"home\": {\"type\": \"string\", \"format\": \"uri\"},",
									"            },",
									"            \"required\": [\"self\", \"home\"]",
									"        },",
									"        \"meta\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"status\": {",
									"                    \"type\": \"object\"",
									"                }",
									"            },",
									"            \"required\": [\"status\"]",
									"        }",
									"    },",
									"    \"required\": [\"links\",\"meta\"]",
									"};",
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    tests[\"Valid data\"] = tv4.validate(responseJSON, schema);",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{be4Url}}/status/",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"description": ""
							}
						],
						"body": {},
						"description": "Status endpoint"
					},
					"response": []
				}
			]
		},
		{
			"name": "Trash",
			"description": "Trash management",
			"item": [
				{
					"name": "GET single object",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"data\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"id\": {\"type\": \"string\"},",
									"                \"type\": {\"type\": \"string\"},",
									"                \"attributes\": {\"type\": \"object\"},",
									"            },",
									"            \"required\": [\"id\", \"type\", \"attributes\"],",
									"        },",
									"        \"links\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"self\": {\"type\": \"string\", \"format\": \"uri\"},",
									"                \"home\": {\"type\": \"string\", \"format\": \"uri\"},",
									"            },",
									"            \"required\": [\"self\", \"home\"],",
									"        },",
									"    },",
									"    \"required\": [\"data\",\"links\"],",
									"};",
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    if (responseCode.code === 200) {",
									"        tests[\"Status equals 200\"] = true;",
									"        tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"        tests[\"Valid data\"] = tv4.validate(responseJSON, schema);",
									"    } else if (responseCode.code === 404) {",
									"        tests[\"Status code is 404\"] = true;",
									"        tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    }",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{be4Url}}/trash/{{objectId}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"description": ""
							}
						],
						"body": {},
						"description": "get single object from trash by id"
					},
					"response": []
				},
				{
					"name": "GET objects",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"data\": {",
									"            \"type\": \"array\",",
									"            \"properties\": {",
									"                \"id\": {\"type\": \"string\"},",
									"                \"type\": {\"type\": \"string\"},",
									"                \"attributes\": {\"type\": \"object\"},",
									"            },",
									"            \"required\": [\"id\", \"type\", \"attributes\"]",
									"        },",
									"        \"links\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"self\": {\"type\": \"string\", \"format\": \"uri\"},",
									"                \"home\": {\"type\": \"string\", \"format\": \"uri\"},",
									"            },",
									"            \"required\": [\"self\", \"home\"]",
									"        },",
									"        \"meta\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"pagination\": {",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                        \"count\": {\"type\": \"number\"},",
									"                        \"page\": {\"type\": \"number\"},",
									"                        \"page_count\": {\"type\": \"number\"},",
									"                        \"page_items\": {\"type\": \"number\"},",
									"                        \"page_size\": {\"type\": \"number\"}",
									"                    },",
									"                    \"required\": [\"count\",\"page\",\"page_count\",\"page_items\",\"page_size\"]",
									"                }",
									"            },",
									"            \"required\": [\"pagination\"]",
									"        }",
									"    },",
									"    \"required\": [\"data\",\"links\",\"meta\"]",
									"};",
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    tests[\"Valid data\"] = tv4.validate(responseJSON, schema);",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{be4Url}}/trash/",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"description": ""
							}
						],
						"body": {},
						"description": "Get objects from trash"
					},
					"response": []
				},
				{
					"name": "Restore object",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests[\"Status code is 204\"] = responseCode.code === 204;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    tests[\"Body matches string\"] = responseBody === \"\";",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{be4Url}}/trash/{{objectId}}",
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"description": ""
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"id\": \"{{objectId}}\",\n        \"type\": \"objects\"\n    }\n}"
						},
						"description": "PATCH restore object"
					},
					"response": []
				},
				{
					"name": "Delete object",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests[\"Status code is 204\"] = responseCode.code === 204;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    tests[\"Body matches string\"] = responseBody === \"\";",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{be4Url}}/trash/{{objectId}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"description": ""
							}
						],
						"body": {},
						"description": "DEL object"
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"description": "users endpoint: User management",
			"item": [
				{
					"name": "GET single user",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"data\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"id\": {\"type\": \"string\"},",
									"                \"type\": {\"type\": \"string\"},",
									"                \"attributes\": {\"type\": \"object\"},",
									"            },",
									"            \"required\": [\"id\", \"type\", \"attributes\"],",
									"        },",
									"        \"links\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"self\": {\"type\": \"string\", \"format\": \"uri\"},",
									"                \"home\": {\"type\": \"string\", \"format\": \"uri\"},",
									"            },",
									"            \"required\": [\"self\", \"home\"],",
									"        },",
									"    },",
									"    \"required\": [\"data\",\"links\"],",
									"};",
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    if (responseCode.code === 200) {",
									"        tests[\"Status equals 200\"] = true;",
									"        tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"        tests[\"Valid data\"] = tv4.validate(responseJSON, schema);",
									"    } else if (responseCode.code === 404) {",
									"        tests[\"Status code is 404\"] = true;",
									"        tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    }",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{be4Url}}/users/{{userId}}",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"description": ""
							}
						],
						"body": {},
						"description": "get single user by id"
					},
					"response": []
				},
				{
					"name": "GET users",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"data\": {",
									"            \"type\": \"array\",",
									"            \"properties\": {",
									"                \"id\": {\"type\": \"string\"},",
									"                \"type\": {\"type\": \"string\"},",
									"                \"attributes\": {\"type\": \"object\"},",
									"            },",
									"            \"required\": [\"id\", \"type\", \"attributes\"]",
									"        },",
									"        \"links\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"self\": {\"type\": \"string\", \"format\": \"uri\"},",
									"                \"home\": {\"type\": \"string\", \"format\": \"uri\"},",
									"            },",
									"            \"required\": [\"self\", \"home\"]",
									"        },",
									"        \"meta\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"pagination\": {",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                        \"count\": {\"type\": \"number\"},",
									"                        \"page\": {\"type\": \"number\"},",
									"                        \"page_count\": {\"type\": \"number\"},",
									"                        \"page_items\": {\"type\": \"number\"},",
									"                        \"page_size\": {\"type\": \"number\"}",
									"                    },",
									"                    \"required\": [\"count\",\"page\",\"page_count\",\"page_items\",\"page_size\"]",
									"                }",
									"            },",
									"            \"required\": [\"pagination\"]",
									"        }",
									"    },",
									"    \"required\": [\"data\",\"links\",\"meta\"]",
									"};",
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    tests[\"Valid data\"] = tv4.validate(responseJSON, schema);",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{be4Url}}/users/",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"description": ""
							}
						],
						"body": {},
						"description": "Get users list"
					},
					"response": []
				},
				{
					"name": "GET user roles",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"data\": {",
									"            \"type\": \"array\",",
									"            \"properties\": {",
									"                \"id\": {\"type\": \"string\"},",
									"                \"type\": {\"type\": \"string\"},",
									"                \"attributes\": {\"type\": \"object\"},",
									"            },",
									"            \"required\": [\"id\", \"type\", \"attributes\"]",
									"        },",
									"        \"links\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"self\": {\"type\": \"string\", \"format\": \"uri\"},",
									"                \"home\": {\"type\": \"string\", \"format\": \"uri\"},",
									"            },",
									"            \"required\": [\"self\", \"home\"]",
									"        },",
									"        \"meta\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"pagination\": {",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                        \"count\": {\"type\": \"number\"},",
									"                        \"page\": {\"type\": \"number\"},",
									"                        \"page_count\": {\"type\": \"number\"},",
									"                        \"page_items\": {\"type\": \"number\"},",
									"                        \"page_size\": {\"type\": \"number\"}",
									"                    },",
									"                    \"required\": [\"count\",\"page\",\"page_count\",\"page_items\",\"page_size\"]",
									"                }",
									"            },",
									"            \"required\": [\"pagination\"]",
									"        }",
									"    },",
									"    \"required\": [\"data\",\"links\",\"meta\"]",
									"};",
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    tests[\"Valid data\"] = tv4.validate(responseJSON, schema);",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{be4Url}}/users/{{userId}}/roles",
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"description": ""
							}
						],
						"body": {},
						"description": "Get user roles"
					},
					"response": []
				},
				{
					"name": "Create user",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests[\"Status code is 201\"] = responseCode.code === 201;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{be4Url}}/users",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"users\",\n        \"attributes\": {\n            \"username\": \"johndoe\",\n            \"password\": \"j04nd0e\",\n            \"uname\": \"johndoe\"\n        }\n    }\n}"
						},
						"description": "Create new User"
					},
					"response": []
				},
				{
					"name": "Patch user",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var schema = {",
									"    \"type\": \"object_type\",",
									"    \"properties\": {",
									"        \"links\": {",
									"            \"type\": \"object_type\",",
									"            \"properties\": {",
									"                \"self\": {\"type\": \"string\", \"format\": \"uri\"},",
									"                \"home\": {\"type\": \"string\", \"format\": \"uri\"},",
									"            },",
									"            \"required\": [\"self\", \"home\"]",
									"        },",
									"        \"data\": {",
									"            \"type\": \"object_type\",",
									"            \"properties\": {",
									"                \"id\": {\"type\": \"string\"},",
									"                \"type\": {\"type\": \"string\"},",
									"                \"attributes\": {\"type\": \"object_type\"},",
									"            },",
									"            \"required\": [\"id\", \"type\", \"attributes\"],",
									"        },",
									"    },",
									"    \"required\": [\"links\", \"data\"],",
									"};",
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    tests[\"Valid data\"] = tv4.validate(responseJSON, schema);",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{be4Url}}/users/{{userId}}",
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"description": ""
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"id\": \"{{userId}}\",\n        \"type\": \"users\",\n        \"attributes\": {\n            \"name\": \"John\"\n        }\n    }\n}"
						},
						"description": "PATCH user"
					},
					"response": []
				},
				{
					"name": "Delete user",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"try {",
									"    tests[\"Status code is 204\"] = responseCode.code === 204;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"    tests[\"Body matches string\"] = responseBody === \"\";",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{be4Url}}/users/{{userId}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"description": ""
							}
						],
						"body": {},
						"description": "DEL user"
					},
					"response": []
				},
				{
					"name": "Add role to user",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{be4Url}}/users/{{userId}}/relationships/roles",
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"roles\",\n\t    \"id\": \"{{roleId}}\"\n    }\n}"
						},
						"description": "Add a role to user"
					},
					"response": []
				},
				{
					"name": "Remove a role",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests[\"Status code is 200\"] = responseCode.code === 200;",
									"    tests[\"Content-Type is correct\"] = postman.getResponseHeader(\"Content-Type\") === 'application/vnd.api+json';",
									"} catch (e) {",
									"    tests[\"Error in parsing response\"] = e;",
									"}"
								]
							}
						}
					],
					"request": {
						"url": "{{be4Url}}/users/{{userId}}/relationships/roles",
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n        \"type\": \"roles\",\n\t    \"id\": \"{{roleId}}\"\n    }\n}"
						},
						"description": "Remove a user's role"
					},
					"response": []
				}
			]
		}
	]
}